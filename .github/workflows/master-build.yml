name: master

'on':
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  test_and_codecov:
    runs-on: ubuntu-latest
    env:
      TZ: Europe/Amsterdam
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: npm ci --ignore-scripts --legacy-peer-deps
      - run: npm run test:ci
      # - run: $(npm bin)/codecov --disable=gcov -f coverage/coverage-final.json
      - uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - run: cd api && go test ./.../

  build_and_publish_dockerhub:
    needs: test_and_codecov
    runs-on: ubuntu-latest
    steps:
      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: docker/build-push-action@v3
        with:
          push: true
          tags: larscom/gitlab-ci-dashboard:master
          build-args: VERSION_ARG=${{ github.sha }}

  build_and_publish_gcr:
    needs: test_and_codecov
    env:
      PROJECT_ID: gitlab-ci-dashboard-370412
      SERVICE: gitlab-ci-dashboard
      REGION: europe-west4
      REGISTRY: gcr.io
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: google-github-actions/auth@v0
        with:
          credentials_json: '${{ secrets.B64_GCLOUD_SERVICE_ACCOUNT_JSON }}'
      - uses: RafikFarhad/push-to-gcr-github-action@v5-beta
        with:
          registry: ${{ env.REGISTRY }}
          project_id: ${{ env.PROJECT_ID }}
          image_name: larscom/gitlab-ci-dashboard
          image_tag: master
          build_args: VERSION_ARG=${{ github.sha }}
      - uses: google-github-actions/deploy-cloudrun@v1
        with:
          image: ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/larscom/gitlab-ci-dashboard:master
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
